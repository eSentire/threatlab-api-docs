{
    "docs": [
        {
            "location": "/", 
            "text": "Threat Lab\n\n\nThreat Lab\n is a highly-scalable application that uses multiple tools to analyze network packet captures.\n\n\nSupported tools:\n\n\n\n\nSnort\n\n\nSuricata\n\n\nBro IDS\n\n\n\n\nDetection rules (Snort \n Suricata):\n\n\n\n\nEmerging Threats\n\n\n\n\nAdditional Bro scripts:\n\n\n\n\nbro-shellshock\n\n\nbro-drwatson\n\n\nbro-tor\n\n\nbro-apt1\n\n\nbro-scripts\n\n\nBotFlex\n\n\n\n\nAPIs\n\n\n\n\nYou can interact and test the APIs in your browser:\n\n\nhttp://www.threatlab.io/api/console/\n\n\n\n\nPCAP Upload\n\n\nUpload PCAP file and put in queue for analysis.\n\n\nResponse will include an ID that you can use in other calls, such as checking task status and retrieving alerts and errors.\n\n\n/api/pcap/v1/upload/\n  \n\n\nMethod: \nPUT\n\n\nParameters\n\n\n\n    \n\n        \n\n            \nParameter\n\n            \nParameter Type\n\n            \nData Type\n\n            \nRequired\n\n            \nDescription\n\n        \n\n    \n\n    \n\n        \n\n            \nfile\n\n            \nbody\n\n            \nfile\n\n            \nYes\n\n            \nPcap file to analyze\n\n        \n\n            \n\n            \nprivate\n\n            \nquery\n\n            \nboolean\n\n            \nNo\n\n            \nHide results from public\n\n        \n\n    \n\n\n\n\n\nError Status Codes\n\n\n\n    \n\n        \n\n            \nHTTP Status Code\n\n            \nReason\n\n        \n\n    \n\n    \n\n        \n\n            \n400\n\n            \nInvalid file format\n\n        \n\n        \n\n            \n200\n\n            \nAnalysis task queued successfully\n\n        \n\n    \n\n\n\n\n\nTesting with CURL\n\n\ncurl 'http://www.threatlab.io/api/pcap/v1/upload' --upload-file ~/Downloads/sample.pcap\n\n\n\n\nSample response body\n\n\n{\n    \nid\n: \nf7c14dc9-100d-4a01-8c9e-fe7e40b7c548\n\n}\n\n\n\n\nPCAP Status\n\n\nPCAP analysis status\n\n\n/api/pcap/v1/status/{id}/\n    \n\n\nMethod: \nGET\n\n\nParameters\n\n\n\n    \n\n        \n\n            \nParameter\n\n            \nParameter Type\n\n            \nData Type\n\n            \nRequired\n\n            \nDescription\n\n        \n\n    \n\n    \n\n        \n\n            \nid\n\n            \npath\n\n            \nstring\n\n            \nYes\n\n            \nUpload ID\n\n        \n\n    \n\n\n\n\n\nError Status Codes\n\n\n\n    \n\n        \n\n            \nHTTP Status Code\n\n            \nReason\n\n        \n\n    \n\n    \n\n        \n\n            \n404\n\n            \nID Not Found\n\n        \n\n        \n\n            \n200\n\n            \nID found\n\n        \n\n    \n\n\n\n\n\nSample response body\n\n\n{\n    \nstatus\n: \nREADY\n\n}\n\n\n\n\nPCAP Detail\n\n\nPCAP object details.\n\n\n/api/pcap/v1/detail/{id}/\n  \n\n\nMethod: \nGET\n\n\nParameters\n\n\n\n    \n\n        \n\n            \nParameter\n\n            \nParameter Type\n\n            \nData Type\n\n            \nRequired\n\n            \nDescription\n\n        \n\n    \n\n    \n\n        \n\n            \nid\n\n            \npath\n\n            \nstring\n\n            \nYes\n\n            \nUpload ID\n\n        \n\n    \n\n\n\n\n\nError Status Codes\n\n\n\n    \n\n        \n\n            \nHTTP Status Code\n\n            \nReason\n\n        \n\n    \n\n    \n\n        \n\n            \n404\n\n            \nID Not Found\n\n        \n\n        \n\n            \n200\n\n            \nID found\n\n        \n\n    \n\n\n\n\n\nSample response body\n\n\n{\n      \nid\n: \nbd508819-79d9-4c5d-b09a-4996a067d066\n,\n      \nstatus\n: \nREADY\n,\n      \nis_private\n: false,\n      \ncreated\n: \n2015-10-17T22:47:40.094372Z\n,\n      \nalerts\n: 63,\n      \nerrors\n: 3\n}\n\n\n\n\nPCAP Alerts\n\n\nReturn list of all IDS Alerts generated for the PCAP file.\n\n\n/api/pcap/v1/alerts/{id}/\n  \n\n\nMethod: \nGET\n\n\nParameters\n\n\n\n    \n\n        \n\n            \nParameter\n\n            \nParameter Type\n\n            \nData Type\n\n            \nRequired\n\n            \nDescription\n\n        \n\n    \n\n    \n\n        \n\n            \nid\n\n            \npath\n\n            \nstring\n\n            \nYes\n\n            \nUpload ID\n\n        \n\n    \n\n\n\n\n\nError Status Codes\n\n\n\n    \n\n        \n\n            \nHTTP Status Code\n\n            \nReason\n\n        \n\n    \n\n    \n\n        \n\n            \n404\n\n            \nID Not Found\n\n        \n\n        \n\n            \n200\n\n            \nID found\n\n        \n\n    \n\n\n\n\n\nSample response body\n\n\n{\n    \ncount\n: 7,\n    \nnext\n: null,\n    \nprevious\n: null,\n    \nresults\n: [\n        {\n            \ntext\n: \nET EXPLOIT Possible Internet Explorer VBscript failure to handle error case information disclosure CVE-2014-6332 Common Function Name\n,\n            \nprotocol\n: \nTCP\n,\n            \nclassification\n: \nAttempted User Privilege Gain\n,\n            \npriority\n: 1,\n            \nsrc_ip\n: \n157.193.55.183\n,\n            \ndst_ip\n: \n192.168.96.10\n,\n            \nsrc_port\n: 80,\n            \ndst_port\n: 1042,\n            \ntool\n: \nSURICATA\n\n        },\n        ...\n    ]\n}\n\n\n\n\nPCAP Errors\n\n\nErrors logged during analysis.\n\n\n/api/pcap/v1/errors/{id}/\n    \n\n\nMethod: \nGET\n\n\nParameters\n\n\n\n    \n\n        \n\n            \nParameter\n\n            \nParameter Type\n\n            \nData Type\n\n            \nRequired\n\n            \nDescription\n\n        \n\n    \n\n    \n\n        \n\n            \nid\n\n            \npath\n\n            \nstring\n\n            \nYes\n\n            \nUpload ID\n\n        \n\n    \n\n\n\n\n\nError Status Codes\n\n\n\n    \n\n        \n\n            \nHTTP Status Code\n\n            \nReason\n\n        \n\n    \n\n    \n\n        \n\n            \n404\n\n            \nID Not Found\n\n        \n\n        \n\n            \n200\n\n            \nID found\n\n        \n\n    \n\n\n\n\n\nSample response body\n\n\n{\n    \ncount\n: 2,\n    \nnext\n: null,\n    \nprevious\n: null,\n    \nresults\n: [\n        {\n            \nerror\n: \nInvalid file format\n,\n            \ntool\n: \nSNORT\n,\n            \npcap\n: \nhttp://www.threatlab.io/api/pcap/v1/3dbcaa40-cd9b-4fdf-87ec-8cf226e582ff\n\n        },\n        ...\n    ]\n}\n\n\n\n\nPagination\n\n\nThreatLab API uses \"Limit-Offset\" pagination.\nThe client includes both a \"limit\" and an \"offset\" query parameter. \nThe limit indicates the maximum number of items to return. The default limit size is 10. \nThe offset indicates the starting position of the query in relation to the complete set of unpaginated items.\n\n\nRequest example:\n\n\nGET http://www.threatlab.io/api/pcap/v1/alerts/3dbcaa40-cd9b-4fdf-87ec-8cf226e582ff/?limit=5\noffset=5\n\n\n\n\nResponse:\n\n\n{\n    \ncount\n: 10,\n    \nnext\n: null,\n    \nprevious\n: \nhttp://www.threatlab.io/api/pcap/v1/alerts/3dbcaa40-cd9b-4fdf-87ec-8cf226e582ff/?limit=5\n,\n    \nresults\n: [\n        ...\n    ]\n}", 
            "title": "Home"
        }, 
        {
            "location": "/#threat-lab", 
            "text": "Threat Lab  is a highly-scalable application that uses multiple tools to analyze network packet captures.  Supported tools:   Snort  Suricata  Bro IDS   Detection rules (Snort   Suricata):   Emerging Threats   Additional Bro scripts:   bro-shellshock  bro-drwatson  bro-tor  bro-apt1  bro-scripts  BotFlex", 
            "title": "Threat Lab"
        }, 
        {
            "location": "/#apis", 
            "text": "You can interact and test the APIs in your browser:  http://www.threatlab.io/api/console/", 
            "title": "APIs"
        }, 
        {
            "location": "/#pcap-upload", 
            "text": "Upload PCAP file and put in queue for analysis.  Response will include an ID that you can use in other calls, such as checking task status and retrieving alerts and errors.  /api/pcap/v1/upload/     Method:  PUT  Parameters  \n     \n         \n             Parameter \n             Parameter Type \n             Data Type \n             Required \n             Description \n         \n     \n     \n         \n             file \n             body \n             file \n             Yes \n             Pcap file to analyze \n         \n             \n             private \n             query \n             boolean \n             No \n             Hide results from public \n         \n       Error Status Codes  \n     \n         \n             HTTP Status Code \n             Reason \n         \n     \n     \n         \n             400 \n             Invalid file format \n         \n         \n             200 \n             Analysis task queued successfully \n         \n       Testing with CURL  curl 'http://www.threatlab.io/api/pcap/v1/upload' --upload-file ~/Downloads/sample.pcap  Sample response body  {\n     id :  f7c14dc9-100d-4a01-8c9e-fe7e40b7c548 \n}", 
            "title": "PCAP Upload"
        }, 
        {
            "location": "/#pcap-status", 
            "text": "PCAP analysis status  /api/pcap/v1/status/{id}/       Method:  GET  Parameters  \n     \n         \n             Parameter \n             Parameter Type \n             Data Type \n             Required \n             Description \n         \n     \n     \n         \n             id \n             path \n             string \n             Yes \n             Upload ID \n         \n       Error Status Codes  \n     \n         \n             HTTP Status Code \n             Reason \n         \n     \n     \n         \n             404 \n             ID Not Found \n         \n         \n             200 \n             ID found \n         \n       Sample response body  {\n     status :  READY \n}", 
            "title": "PCAP Status"
        }, 
        {
            "location": "/#pcap-detail", 
            "text": "PCAP object details.  /api/pcap/v1/detail/{id}/     Method:  GET  Parameters  \n     \n         \n             Parameter \n             Parameter Type \n             Data Type \n             Required \n             Description \n         \n     \n     \n         \n             id \n             path \n             string \n             Yes \n             Upload ID \n         \n       Error Status Codes  \n     \n         \n             HTTP Status Code \n             Reason \n         \n     \n     \n         \n             404 \n             ID Not Found \n         \n         \n             200 \n             ID found \n         \n       Sample response body  {\n       id :  bd508819-79d9-4c5d-b09a-4996a067d066 ,\n       status :  READY ,\n       is_private : false,\n       created :  2015-10-17T22:47:40.094372Z ,\n       alerts : 63,\n       errors : 3\n}", 
            "title": "PCAP Detail"
        }, 
        {
            "location": "/#pcap-alerts", 
            "text": "Return list of all IDS Alerts generated for the PCAP file.  /api/pcap/v1/alerts/{id}/     Method:  GET  Parameters  \n     \n         \n             Parameter \n             Parameter Type \n             Data Type \n             Required \n             Description \n         \n     \n     \n         \n             id \n             path \n             string \n             Yes \n             Upload ID \n         \n       Error Status Codes  \n     \n         \n             HTTP Status Code \n             Reason \n         \n     \n     \n         \n             404 \n             ID Not Found \n         \n         \n             200 \n             ID found \n         \n       Sample response body  {\n     count : 7,\n     next : null,\n     previous : null,\n     results : [\n        {\n             text :  ET EXPLOIT Possible Internet Explorer VBscript failure to handle error case information disclosure CVE-2014-6332 Common Function Name ,\n             protocol :  TCP ,\n             classification :  Attempted User Privilege Gain ,\n             priority : 1,\n             src_ip :  157.193.55.183 ,\n             dst_ip :  192.168.96.10 ,\n             src_port : 80,\n             dst_port : 1042,\n             tool :  SURICATA \n        },\n        ...\n    ]\n}", 
            "title": "PCAP Alerts"
        }, 
        {
            "location": "/#pcap-errors", 
            "text": "Errors logged during analysis.  /api/pcap/v1/errors/{id}/       Method:  GET  Parameters  \n     \n         \n             Parameter \n             Parameter Type \n             Data Type \n             Required \n             Description \n         \n     \n     \n         \n             id \n             path \n             string \n             Yes \n             Upload ID \n         \n       Error Status Codes  \n     \n         \n             HTTP Status Code \n             Reason \n         \n     \n     \n         \n             404 \n             ID Not Found \n         \n         \n             200 \n             ID found \n         \n       Sample response body  {\n     count : 2,\n     next : null,\n     previous : null,\n     results : [\n        {\n             error :  Invalid file format ,\n             tool :  SNORT ,\n             pcap :  http://www.threatlab.io/api/pcap/v1/3dbcaa40-cd9b-4fdf-87ec-8cf226e582ff \n        },\n        ...\n    ]\n}", 
            "title": "PCAP Errors"
        }, 
        {
            "location": "/#pagination", 
            "text": "ThreatLab API uses \"Limit-Offset\" pagination.\nThe client includes both a \"limit\" and an \"offset\" query parameter. \nThe limit indicates the maximum number of items to return. The default limit size is 10. \nThe offset indicates the starting position of the query in relation to the complete set of unpaginated items.  Request example:  GET http://www.threatlab.io/api/pcap/v1/alerts/3dbcaa40-cd9b-4fdf-87ec-8cf226e582ff/?limit=5 offset=5  Response:  {\n     count : 10,\n     next : null,\n     previous :  http://www.threatlab.io/api/pcap/v1/alerts/3dbcaa40-cd9b-4fdf-87ec-8cf226e582ff/?limit=5 ,\n     results : [\n        ...\n    ]\n}", 
            "title": "Pagination"
        }, 
        {
            "location": "/clients/", 
            "text": "Client Libraries\n\n\nPython\n\n\nslumber\n\n\nSlumber\n is a python library that provides a convenient yet powerful object orientated interface to ReSTful APIs. It acts as a wrapper around the excellent requests library and abstracts away the handling of urls, serialization, and processing requests.\n\n\nInstallation:\n\n\npip install slumber\n\n\n\n\nUsage example:\n\n\n import slumber\n\n ## Connect to http://www.threatlab.io/api/pcap/v1/ with no authentication\n\n api = slumber.API(\nhttp://www.threatlab.io/api/pcap/v1/\n)\n\n ## Upload file for analysis\n\n api.upload.put(files={'file': open('sample.pcap', 'r')})\n\n ## GET http://www.threatlab.io/api/pcap/v1/pcap/detail/f7c14dc9-100d-4a01-8c9e-fe7e40b7c548\n\n api.detail('f7c14dc9-100d-4a01-8c9e-fe7e40b7c548').get()\n\n ## GET http://www.threatlab.io/api/pcap/v1/pcap/alerts/f7c14dc9-100d-4a01-8c9e-fe7e40b7c548\n\n api.alerts('f7c14dc9-100d-4a01-8c9e-fe7e40b7c548').get()", 
            "title": "Clients"
        }, 
        {
            "location": "/clients/#client-libraries", 
            "text": "", 
            "title": "Client Libraries"
        }, 
        {
            "location": "/clients/#python", 
            "text": "slumber  Slumber  is a python library that provides a convenient yet powerful object orientated interface to ReSTful APIs. It acts as a wrapper around the excellent requests library and abstracts away the handling of urls, serialization, and processing requests.  Installation:  pip install slumber  Usage example:   import slumber  ## Connect to http://www.threatlab.io/api/pcap/v1/ with no authentication  api = slumber.API( http://www.threatlab.io/api/pcap/v1/ )  ## Upload file for analysis  api.upload.put(files={'file': open('sample.pcap', 'r')})  ## GET http://www.threatlab.io/api/pcap/v1/pcap/detail/f7c14dc9-100d-4a01-8c9e-fe7e40b7c548  api.detail('f7c14dc9-100d-4a01-8c9e-fe7e40b7c548').get()  ## GET http://www.threatlab.io/api/pcap/v1/pcap/alerts/f7c14dc9-100d-4a01-8c9e-fe7e40b7c548  api.alerts('f7c14dc9-100d-4a01-8c9e-fe7e40b7c548').get()", 
            "title": "Python"
        }
    ]
}